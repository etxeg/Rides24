<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="CheckAlertsWhiteMockTest" time="1.035" tests="6" errors="6" skipped="0" failures="0">
  <properties>
    <property name="jansi.mode" value="force"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="21.0.8+9-LTS"/>
    <property name="sun.boot.library.path" value="/home/ander/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.linux.x86_64_21.0.8.v20250724-1412/jre/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/ander/git/Rides24"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/ander/git/Rides24"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="21.0.8+9-LTS"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/home/ander/eclipse-workspace/.metadata/.plugins/org.eclipse.m2e.launching/launches/m2conf15123003037301715839.tmp"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="65.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="6.8.0-84-generic"/>
    <property name="user.home" value="/home/ander"/>
    <property name="user.timezone" value="Europe/Madrid"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="21"/>
    <property name="user.name" value="ander"/>
    <property name="java.class.path" value="/home/ander/.p2/pool/plugins/org.eclipse.m2e.maven.runtime_3.9.1100.20250811-2018/jars/plexus-classworlds-2.9.0.jar"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B -Dstyle.color=always clean org.jacoco:jacoco-maven-plugin:prepare-agent org.jacoco:jacoco-maven-plugin:report install sonar:sonar"/>
    <property name="java.home" value="/home/ander/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.linux.x86_64_21.0.8.v20250724-1412/jre"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="21.0.8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="maven.home" value="/home/ander/git/Rides24/EMBEDDED"/>
    <property name="style.color" value="always"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2025-07-15"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="Temurin-21.0.8+9"/>
    <property name="m2e.build.project.data.socket.port" value="35189"/>
  </properties>
  <testcase name="test1" classname="CheckAlertsWhiteMockTest" time="0.949">
    <error message="&#10;The used MockMaker SubclassByteBuddyMockMaker does not support the creation of static mocks&#10;&#10;Mockito&apos;s inline mock maker supports static mocks based on the Instrumentation API.&#10;You can simply enable this mock mode, by placing the &apos;mockito-inline&apos; artifact where you are currently using &apos;mockito-core&apos;.&#10;Note that Mockito&apos;s inline mock maker is not supported on Android." type="org.mockito.exceptions.base.MockitoException">org.mockito.exceptions.base.MockitoException: 

The used MockMaker SubclassByteBuddyMockMaker does not support the creation of static mocks

Mockito's inline mock maker supports static mocks based on the Instrumentation API.
You can simply enable this mock mode, by placing the 'mockito-inline' artifact where you are currently using 'mockito-core'.
Note that Mockito's inline mock maker is not supported on Android.
	at CheckAlertsWhiteMockTest.init(CheckAlertsWhiteMockTest.java:49)
</error>
    <system-err><![CDATA[java.lang.instrument.IllegalClassFormatException: Error while instrumenting sun/util/resources/cldr/provider/CLDRLocaleDataMetaInfo with JaCoCo 0.8.8.202204050719/5dcf34a.
	at org.jacoco.agent.rt.internal_b6258fc.CoverageTransformer.transform(CoverageTransformer.java:94)
	at java.instrument/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:244)
	at java.instrument/sun.instrument.TransformerManager.transform(TransformerManager.java:188)
	at java.instrument/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:610)
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1027)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1105)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:182)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:821)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassInModuleOrNull(BuiltinClassLoader.java:741)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClass(BuiltinClassLoader.java:621)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:638)
	at java.base/java.lang.Class.forName(Class.java:625)
	at java.base/java.lang.Class.forName(Class.java:600)
	at java.base/java.util.ServiceLoader.loadProvider(ServiceLoader.java:859)
	at java.base/java.util.ServiceLoader$ModuleServicesLookupIterator.hasNext(ServiceLoader.java:1084)
	at java.base/java.util.ServiceLoader$2.hasNext(ServiceLoader.java:1309)
	at java.base/java.util.ServiceLoader$3.hasNext(ServiceLoader.java:1393)
	at java.base/sun.util.cldr.CLDRLocaleProviderAdapter.lambda$new$0(CLDRLocaleProviderAdapter.java:84)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:571)
	at java.base/sun.util.cldr.CLDRLocaleProviderAdapter.<init>(CLDRLocaleProviderAdapter.java:83)
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at java.base/sun.util.locale.provider.LocaleProviderAdapter.forType(LocaleProviderAdapter.java:194)
	at java.base/sun.util.locale.provider.LocaleProviderAdapter.findAdapter(LocaleProviderAdapter.java:293)
	at java.base/sun.util.locale.provider.LocaleProviderAdapter.getAdapter(LocaleProviderAdapter.java:264)
	at java.base/java.text.DecimalFormatSymbols.getInstance(DecimalFormatSymbols.java:181)
	at java.base/java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2032)
	at java.base/java.util.Formatter.getZero(Formatter.java:2040)
	at java.base/java.util.Formatter$FormatSpecifier.localizedMagnitude(Formatter.java:4531)
	at java.base/java.util.Formatter$FormatSpecifier.print(Formatter.java:3377)
	at java.base/java.util.Formatter$FormatSpecifier.print(Formatter.java:3362)
	at java.base/java.util.Formatter$FormatSpecifier.printInteger(Formatter.java:3060)
	at java.base/java.util.Formatter$FormatSpecifier.print(Formatter.java:3021)
	at java.base/java.util.Formatter.format(Formatter.java:2791)
	at java.base/java.util.Formatter.format(Formatter.java:2728)
	at java.base/java.lang.String.format(String.java:4390)
	at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(SubclassBytecodeGenerator.java:120)
	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:46)
	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:43)
	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:152)
	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:365)
	at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:174)
	at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:376)
	at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:36)
	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(SubclassByteBuddyMockMaker.java:77)
	at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:43)
	at org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(ByteBuddyMockMaker.java:25)
	at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35)
	at org.mockito.internal.MockitoCore.mock(MockitoCore.java:69)
	at org.mockito.Mockito.mock(Mockito.java:1933)
	at org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(MockAnnotationProcessor.java:57)
	at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:26)
	at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:23)
	at org.mockito.internal.configuration.IndependentAnnotationEngine.createMockFor(IndependentAnnotationEngine.java:45)
	at org.mockito.internal.configuration.IndependentAnnotationEngine.process(IndependentAnnotationEngine.java:72)
	at org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:73)
	at org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:47)
	at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:82)
	at CheckAlertsWhiteMockTest.init(CheckAlertsWhiteMockTest.java:48)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.RunBefores.invokeMethod(RunBefores.java:33)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Caused by: java.io.IOException: Error while instrumenting sun/util/resources/cldr/provider/CLDRLocaleDataMetaInfo with JaCoCo 0.8.8.202204050719/5dcf34a.
	at org.jacoco.agent.rt.internal_b6258fc.core.instr.Instrumenter.instrumentError(Instrumenter.java:161)
	at org.jacoco.agent.rt.internal_b6258fc.core.instr.Instrumenter.instrument(Instrumenter.java:111)
	at org.jacoco.agent.rt.internal_b6258fc.CoverageTransformer.transform(CoverageTransformer.java:92)
	... 87 more
Caused by: java.lang.IllegalArgumentException: Unsupported class file major version 65
	at org.jacoco.agent.rt.internal_b6258fc.asm.ClassReader.<init>(ClassReader.java:199)
	at org.jacoco.agent.rt.internal_b6258fc.asm.ClassReader.<init>(ClassReader.java:180)
	at org.jacoco.agent.rt.internal_b6258fc.asm.ClassReader.<init>(ClassReader.java:166)
	at org.jacoco.agent.rt.internal_b6258fc.core.internal.instr.InstrSupport.classReaderFor(InstrSupport.java:280)
	at org.jacoco.agent.rt.internal_b6258fc.core.instr.Instrumenter.instrument(Instrumenter.java:77)
	at org.jacoco.agent.rt.internal_b6258fc.core.instr.Instrumenter.instrument(Instrumenter.java:109)
	... 88 more
]]></system-err>
  </testcase>
  <testcase name="test1" classname="CheckAlertsWhiteMockTest" time="0.95">
    <error message="Cannot invoke &quot;org.mockito.MockedStatic.close()&quot; because &quot;this.persistenceMock&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "org.mockito.MockedStatic.close()" because "this.persistenceMock" is null
	at CheckAlertsWhiteMockTest.tearDown(CheckAlertsWhiteMockTest.java:62)
</error>
  </testcase>
  <testcase name="test2" classname="CheckAlertsWhiteMockTest" time="0">
    <error message="&#10;The used MockMaker SubclassByteBuddyMockMaker does not support the creation of static mocks&#10;&#10;Mockito&apos;s inline mock maker supports static mocks based on the Instrumentation API.&#10;You can simply enable this mock mode, by placing the &apos;mockito-inline&apos; artifact where you are currently using &apos;mockito-core&apos;.&#10;Note that Mockito&apos;s inline mock maker is not supported on Android." type="org.mockito.exceptions.base.MockitoException">org.mockito.exceptions.base.MockitoException: 

The used MockMaker SubclassByteBuddyMockMaker does not support the creation of static mocks

Mockito's inline mock maker supports static mocks based on the Instrumentation API.
You can simply enable this mock mode, by placing the 'mockito-inline' artifact where you are currently using 'mockito-core'.
Note that Mockito's inline mock maker is not supported on Android.
	at CheckAlertsWhiteMockTest.init(CheckAlertsWhiteMockTest.java:49)
</error>
  </testcase>
  <testcase name="test2" classname="CheckAlertsWhiteMockTest" time="0">
    <error message="Cannot invoke &quot;org.mockito.MockedStatic.close()&quot; because &quot;this.persistenceMock&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "org.mockito.MockedStatic.close()" because "this.persistenceMock" is null
	at CheckAlertsWhiteMockTest.tearDown(CheckAlertsWhiteMockTest.java:62)
</error>
  </testcase>
  <testcase name="test3" classname="CheckAlertsWhiteMockTest" time="0.002">
    <error message="&#10;The used MockMaker SubclassByteBuddyMockMaker does not support the creation of static mocks&#10;&#10;Mockito&apos;s inline mock maker supports static mocks based on the Instrumentation API.&#10;You can simply enable this mock mode, by placing the &apos;mockito-inline&apos; artifact where you are currently using &apos;mockito-core&apos;.&#10;Note that Mockito&apos;s inline mock maker is not supported on Android." type="org.mockito.exceptions.base.MockitoException">org.mockito.exceptions.base.MockitoException: 

The used MockMaker SubclassByteBuddyMockMaker does not support the creation of static mocks

Mockito's inline mock maker supports static mocks based on the Instrumentation API.
You can simply enable this mock mode, by placing the 'mockito-inline' artifact where you are currently using 'mockito-core'.
Note that Mockito's inline mock maker is not supported on Android.
	at CheckAlertsWhiteMockTest.init(CheckAlertsWhiteMockTest.java:49)
</error>
  </testcase>
  <testcase name="test3" classname="CheckAlertsWhiteMockTest" time="0.002">
    <error message="Cannot invoke &quot;org.mockito.MockedStatic.close()&quot; because &quot;this.persistenceMock&quot; is null" type="java.lang.NullPointerException">java.lang.NullPointerException: Cannot invoke "org.mockito.MockedStatic.close()" because "this.persistenceMock" is null
	at CheckAlertsWhiteMockTest.tearDown(CheckAlertsWhiteMockTest.java:62)
</error>
  </testcase>
</testsuite>